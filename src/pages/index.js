import { useEffect, useCallback } from 'react'
import Head from 'next/head'
import useGetUserFirebase from '../hooks/useGetUserFirebase'


const fetcher = (url) => fetch(url).then((res) => res.json())

export async function getStaticProps() {
  return { props: 
    { isStatic: true } 
  }
}

export default function Home(props) {
  const { users, loading, error, handlerDataFromFirebase} = useGetUserFirebase()

  return (
    <div className="flex min-h-screen flex-col items-center justify-center py-2">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex w-full flex-1 flex-col items-center justify-center px-20 text-center">
        <div>
          <div>
            {props?.isSSR ? (
                <h2 className="text-3xl font-bold">
                  üòÅ SSR Working
                </h2>
              ) : (
                <h2 className="text-3xl font-bold">
                  ü•∫ SSR Not Works
                </h2>
              )
            }
          </div>
          <div>
            {props?.isStatic ? (
                <h2 className="text-3xl font-bold">
                  üòÅ Static generated
                </h2>
              ) : (
                <h2 className="text-3xl font-bold">
                  ü•∫ is Not Static
                </h2>
              )
            }
          </div>
          <div className="bg-green-50">
            <div className="mx-auto max-w-7xl py-12 px-4 sm:px-6 lg:items-center lg:justify-between lg:py-16 lg:px-8">
              <h1 className="text-2xl font-bold">Click the button and fetch data from Firebase</h1>  
              {loading ? <p>...Loading</p> : (
                <ul>
                  {users.length > 0 && users.map((user) => (
                    <div key={user.id}>
                      {user.name}
                    </div>
                  ))}
                </ul>
              )}
              <button 
                className="inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-5 py-3 text-base font-medium text-white hover:bg-indigo-700" 
                onClick={handlerDataFromFirebase}
                >
                Fetch me
              </button>
              {error !== '' && <p>{error}</p>}
            </div>
          </div>
        </div>      
      </main>
    </div>
  )
}